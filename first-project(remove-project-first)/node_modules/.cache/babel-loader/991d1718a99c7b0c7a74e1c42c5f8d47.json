{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/xuantai/Documents/PSCD/React/project-first/src/Components/temperature/Calculator.js\";\nimport React from 'react';\nimport BoilingVerdict from './BoilingVerdict';\nimport TemperatureInput from './TemperatureInput';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: 0,\n      scale: 'c'\n    };\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n\n  toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n  }\n\n  tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      temperature,\n      scale: 'c'\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      temperature,\n      scale: 'f'\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? this.tryConvert(temperature, this.toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/home/xuantai/Documents/PSCD/React/project-first/src/Components/temperature/Calculator.js"],"names":["React","BoilingVerdict","TemperatureInput","Calculator","Component","constructor","props","state","temperature","scale","handleCelsiusChange","bind","handleFahrenheitChange","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE,CAAd;AAAkBC,MAAAA,KAAK,EAAG;AAA1B,KAAb;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACH;;AACDE,EAAAA,SAAS,CAACC,UAAD,EAAa;AAClB,WAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAU;AAClB,WAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AAEDC,EAAAA,UAAU,CAACT,WAAD,EAAcU,OAAd,EAAuB;AAC7B,UAAMC,KAAK,GAAGC,UAAU,CAACZ,WAAD,CAAxB;;AACA,QAAIa,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACvB,aAAO,EAAP;AACD;;AACD,UAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,UAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,WAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AAEDjB,EAAAA,mBAAmB,CAACF,WAAD,EAAa;AAC5B,SAAKoB,QAAL,CAAc;AAACpB,MAAAA,WAAD;AAAcC,MAAAA,KAAK,EAAG;AAAtB,KAAd;AACH;;AACDG,EAAAA,sBAAsB,CAACJ,WAAD,EAAa;AAC/B,SAAKoB,QAAL,CAAc;AAACpB,MAAAA,WAAD;AAAaC,MAAAA,KAAK,EAAG;AAArB,KAAd;AACH;;AACDoB,EAAAA,MAAM,GAAE;AACJ,UAAMpB,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,UAAMQ,OAAO,GAAGP,KAAK,KAAK,GAAV,GAAgB,KAAKQ,UAAL,CAAgBT,WAAhB,EAA4B,KAAKK,SAAjC,CAAhB,GAA8DL,WAA9E;AACA,UAAMM,UAAU,GAAGL,KAAK,KAAK,GAAV,GAAgB,KAAKQ,UAAL,CAAgBT,WAAhB,EAA4B,KAAKO,YAAjC,CAAhB,GAAiEP,WAApF;AACA,wBACI;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,WAAW,EAAEQ,OAAzC;AAAkD,QAAA,mBAAmB,EAAE,KAAKN;AAA5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,GAAxB;AAA4B,QAAA,WAAW,EAAEI,UAAzC;AAAqD,QAAA,mBAAmB,EAAE,KAAKF;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1CoC;;AA6CzC,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport BoilingVerdict from './BoilingVerdict';\nimport TemperatureInput from './TemperatureInput';\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {temperature: 0 , scale : 'c'};\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    }\n    toCelsius(fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n      \n    toFahrenheit(celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n\n    tryConvert(temperature, convert) {\n        const input = parseFloat(temperature);\n        if (Number.isNaN(input)) {\n          return '';\n        }\n        const output = convert(input);\n        const rounded = Math.round(output * 1000) / 1000;\n        return rounded.toString();\n    }\n\n    handleCelsiusChange(temperature){\n        this.setState({temperature ,scale : 'c'});\n    }\n    handleFahrenheitChange(temperature){\n        this.setState({temperature,scale : 'f'});\n    }\n    render(){\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale === 'f' ? this.tryConvert(temperature,this.toCelsius) : temperature ;\n        const fahrenheit = scale === 'c' ? this.tryConvert(temperature,this.toFahrenheit) : temperature ;\n        return (\n            <div>\n                <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange={this.handleCelsiusChange}/>\n                <TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange}/>\n            </div>\n        );\n    }\n}\n\nexport default Calculator ;"]},"metadata":{},"sourceType":"module"}